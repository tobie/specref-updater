#!/bin/bash

function setup_cwd()
{
    cd $TMPDIR;
    rm -rf $WORKING_DIR;
    mkdir $WORKING_DIR;
    cd $WORKING_DIR;
}

function cleanup()
{
    cd $TMPDIR;
    rm -rf $WORKING_DIR;
}

function pull_repo()
{
    git init || exit 1;
    git config user.email $GITHUB_EMAIL;
    git config user.username $GITHUB_NAME;
    # Avoid leaking <GITHUB_TOKEN>.
    str=`git pull $url 2>&1`;
    ret=$?;
    echo "${str//$GITHUB_TOKEN/<GITHUB_TOKEN>}"
    if [ $ret -ne 0 ] ; then
        exit $ret;
    fi
}

function setup()
{
    npm install;
}

function run()
{
    node ./scripts/auto-update.js;
}

function update_repo()
{
    # Avoid leaking <GITHUB_TOKEN>.
    str=`git push $url HEAD:$TARGET_BRANCH 2>&1`;
    ret=$?;
    echo "${str//$GITHUB_TOKEN/<GITHUB_TOKEN>}"
    if [ $ret -ne 0 ] ; then
        exit $ret;
    fi
}

# SET DEFAULTS
: ${TARGET_BRANCH:=master}
: ${WORKING_DIR:=specref}

# REQUIRED
: ${GITHUB_EMAIL:?"ENV VAR GITHUB_EMAIL is not set."}
: ${GITHUB_NAME:?"ENV VAR GITHUB_NAME is not set."}
: ${GITHUB_REPO:?"ENV VAR GITHUB_REPO is not set."}
: ${GITHUB_TOKEN:?"ENV VAR GITHUB_TOKEN is not set."}

url=${GITHUB_REPO/https:\/\//https:\/\/$GITHUB_TOKEN:x-oauth-basic@};

setup_cwd && pull_repo && setup && run && update_repo;

ret=$?;

cleanup;

if [ $? -ne 0 ]
then
    exit $?;
elif [ $ret -eq 64 ]
then
    exit 0;
else
    exit $ret;
fi

